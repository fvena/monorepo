{
  // Place your workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  //   "scope": "javascript,typescript",
  //   "prefix": "log",
  //   "body": [
  //     "console.log('$1');",
  //     "$2"
  //   ],
  //   "description": "Log output to console"
  // }
  "Vue component composition API + JS": {
    "scope": "vue",
    "prefix": "poex-component-js",
    "description": "Creates a new Vue component with the basic structure",
    "body": [
      "<template lang=\"pug\">",
      "div",
      "\t",
      "</template>",
      "",
      "<script>",
      "\timport { computed, onBeforeMount, ref, watch } from 'vue'",
      "\timport { useStore } from '@Core/plugins/store'",
      "\timport { useI18n } from 'vue-i18n'",
      "",
      "\texport default {",
      "\t\tname: '${1}',",
      "\t\tprops: {},",
      "\t\temits: [],",
      "\t\texpose: [],",
      "\t\tsetup(props, { emit }) {",
      "\t\t\t//",
      "\t\t\t// Mixins",
      "\t\t\t//",
      "\t\t\tconst { t } = useI18n()",
      "\t\t\t",
      "\t\t\t//",
      "\t\t\t// Data",
      "\t\t\t//",
      "\t\t\t${0}",
      "",
      "\t\t\t//",
      "\t\t\t// Computed",
      "\t\t\t//",
      "",
      "\t\t\t//",
      "\t\t\t// Watchers",
      "\t\t\t//",
      "",
      "\t\t\t//",
      "\t\t\t// Lifecycle Hooks",
      "\t\t\t//",
      "\t\t\tonBeforeMount(async () => {})",
      "",
      "\t\t\t//",
      "\t\t\t// Methods",
      "\t\t\t//",
      "",
      "\t\t\treturn {",
      "\t\t\t\t",
      "\t\t\t}",
      "\t\t}",
      "}",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>"
    ]
  },
  "Vue component script setup + TS": {
    "scope": "vue",
    "prefix": "poex-component-ts",
    "description": "Creates a new Vue component with the basic structure",
    "body": [
      "<template lang=\"pug\">",
      "div",
      "\t",
      "</template>",
      "",
      "<script setup lang=\"ts\">",
      "\timport { computed, onBeforeMount, ref, watch } from 'vue'",
      "\timport { useProvider, usePlocState } from '@Utils'",
      "\timport { useStore } from '@Core/plugins/store'",
      "\timport { useI18n } from 'vue-i18n'",
      "",
      "\t//",
      "\t// Props & events",
      "\t//",
      "\tconst props = defineProps<{}>()",
      "\tconst emit = defineEmits([])",
      "",
      "\t//",
      "\t// Mixins",
      "\t//",
      "\tconst { t } = useI18n()",
      "",
      "\t//",
      "\t// Data",
      "\t//",
      "\t${0}",
      "",
      "\t//",
      "\t// Computed",
      "\t//",
      "",
      "\t//",
      "\t// Watchers",
      "\t//",
      "",
      "\t//",
      "\t// Lifecycle Hooks",
      "\t//",
      "\tonBeforeMount(async () => {})",
      "",
      "\t//",
      "\t// Methods",
      "\t//",
      "",
      "\tdefineExpose({",
      "\t\t",
      "\t})",
      "</script>",
      "",
      "<style lang=\"scss\" scoped>",
      "",
      "</style>"
    ]
  }
}
